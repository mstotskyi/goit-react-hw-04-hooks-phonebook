{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css"],"names":["ContactForm","addNewCntacts","contacts","useState","name","setName","number","setNumber","IdName","uuid","IdNumber","handleOnChange","e","target","value","resetForm","onSubmit","preventDefault","obj","id","some","element","toLocaleLowerCase","alert","className","styles","form","htmlFor","label","formInput","type","pattern","title","required","onChange","Filter","handleOnChangefilter","IdFilter","ContactItem","deleteContact","contactName","contactDeleteBtn","onClick","ContactList","contactList","map","contact","contactListItem","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","filteredContacts","includes","prevState","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.45125333.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport styles from 'components/ContactForm/ContactForm.module.css';\r\n\r\nexport function ContactForm({ addNewCntacts, contacts }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const IdName = uuid();\r\n  const IdNumber = uuid();\r\n\r\n  const handleOnSubmit = e => {\r\n    e.preventDefault();\r\n    const obj = {\r\n      name: name,\r\n      number: number,\r\n      id: uuid(),\r\n    };\r\n    const existedContact = contacts.some(\r\n      element =>\r\n        element.name.toLocaleLowerCase() === obj.name.toLocaleLowerCase(),\r\n    );\r\n\r\n    if (existedContact) {\r\n      return alert(`${obj.name} is already in the contact list`);\r\n    }\r\n    addNewCntacts(obj);\r\n    resetForm();\r\n  };\r\n\r\n  const handleOnChange = e => {\r\n    switch (e.target.name) {\r\n      case 'name':\r\n        setName(e.target.value);\r\n        break;\r\n      case 'number':\r\n        setNumber(e.target.value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleOnSubmit} className={styles.form}>\r\n      <label htmlFor={IdName} className={styles.label}>\r\n        Name\r\n      </label>\r\n      <br />\r\n      <input\r\n        className={styles.formInput}\r\n        id={IdName}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        onChange={handleOnChange}\r\n      />\r\n      <br />\r\n      <label htmlFor={IdNumber} className={styles.label}>\r\n        Number\r\n      </label>\r\n      <br />\r\n      <input\r\n        className={styles.formInput}\r\n        id={IdNumber}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        value={number}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        onChange={handleOnChange}\r\n      />\r\n      <br />\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.array,\r\n  addNewCntacts: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport function Filter({ handleOnChangefilter }) {\r\n  const IdFilter = uuid();\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={IdFilter}>Find contacts by name</label>\r\n      <br />\r\n      <input\r\n        id={IdFilter}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        onChange={handleOnChangefilter}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  handleOnChangefilter: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport styles from 'components/ContactList/ContactList.module.css';\r\n\r\nexport function ContactItem({ number, id, name, deleteContact }) {\r\n  return (\r\n    <>\r\n      <span className={styles.contactName}>{name}:</span>\r\n      <span> {number}</span>\r\n      <button\r\n        className={styles.contactDeleteBtn}\r\n        type=\"button\"\r\n        id={id}\r\n        onClick={() => {\r\n          deleteContact(id);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  deleteContact: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nimport { ContactItem } from 'components/ContactList/ContactItem';\r\nimport styles from 'components/ContactList/ContactList.module.css';\r\n\r\nexport function ContactList({ contacts, deleteContact }) {\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {contacts.map(contact => (\r\n        <li key={contact.id} className={styles.contactListItem}>\r\n          <ContactItem\r\n            id={contact.id}\r\n            name={contact.name}\r\n            number={contact.number}\r\n            deleteContact={deleteContact}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func,\r\n};\r\n","import './App.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport { ContactForm } from 'components/ContactForm/ContactForm';\r\nimport { Filter } from 'components/Filter/Filter';\r\nimport { ContactList } from 'components/ContactList/ContactList';\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState(\r\n    JSON.parse(window.localStorage.getItem('localContacts')) ?? [],\r\n  );\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const addNewCntacts = obj => {\r\n    setContacts(prevState => [...prevState, obj]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (contacts !== [])\r\n      window.localStorage.setItem('localContacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const handleOnChangefilter = e => {\r\n    switch (e.target.name) {\r\n      case 'contact':\r\n        setContacts(e.target.value);\r\n        break;\r\n      case 'filter':\r\n        setFilter(e.target.value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const contactsFilter = () => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\r\n    );\r\n  };\r\n\r\n  const filteredContacts = contactsFilter();\r\n\r\n  const deleteContact = id => {\r\n    setContacts(prevState => prevState.filter(contact => contact.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Phonebook</h1>\r\n      <ContactForm addNewCntacts={addNewCntacts} contacts={contacts} />\r\n      <div className=\"contacts-wrapper\">\r\n        <h2 className=\"contacts-title\">Contacts</h2>\r\n        <Filter\r\n          contacts={contacts}\r\n          filter={filter}\r\n          handleOnChangefilter={handleOnChangefilter}\r\n        />\r\n        <ContactList\r\n          contacts={filteredContacts}\r\n          deleteContact={deleteContact}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1ml-Q\",\"contactListItem\":\"ContactList_contactListItem__2KJ5F\",\"contactDeleteBtn\":\"ContactList_contactDeleteBtn__XMHsl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3Qu7Z\",\"label\":\"ContactForm_label__3idwa\",\"formInput\":\"ContactForm_formInput__3Ga6t\"};"],"sourceRoot":""}